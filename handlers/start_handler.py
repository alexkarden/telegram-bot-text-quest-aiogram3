import configparser

from aiogram import Router
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message

#–ò–º–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
from utils.functions_db import add_user_db

#–ò–º–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from keyboards.keyboards import start_keyboard_inline



router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ ConfigParser
    config = configparser.ConfigParser()
    # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    config.read('handlers/texts.ini')
    cmd_text = config.get('cmd_start', 'cmd_text')
    formatted_text = cmd_text.format(f"üëã",message.from_user.first_name,f"\n")
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
    await add_user_db(message.from_user.id, message.from_user.first_name, message.from_user.last_name, message.from_user.username)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    await message.answer(formatted_text, reply_markup=start_keyboard_inline, parse_mode=ParseMode.HTML)






